Objectives
1. Your visualization must include a Python Flask–powered API, HTML/CSS, JavaScript, and at least one database (SQL, MongoDB, SQLite, etc.).
2. Your project should fall into one of the below four tracks:
   A custom “creative” D3.js project (i.e., a nonstandard graph or chart)
   A combination of web scraping and Leaflet or Plotly
   A dashboard page with multiple charts that update from the same data
   A “thick” server that performs multiple manipulations on data in a database prior to visualization (must be approved)
3. Your project should include at least one JS library that we did not cover.
4. Your project must be powered by a data set with at least 100 records.
5. Your project must include some level of user-driven interaction (e.g., menus, dropdowns, textboxes).
6. Your final visualization should ideally include at least three views.

Project Scope: https://docs.google.com/document/d/1Y-LK2EmfzMqO1JCea76kA7EsjxmAjQdbcmni7sjqSK8/edit?usp=sharing

API:
   https://collegescorecard.ed.gov/data/documentation/

Datasets:
   https://www2.census.gov/programs-surveys/demo/tables/school-enrollment/2018/2018-cps/tab06.xlsx
   https://www.petersonsdata.com/undergraduate/undergraduate-financial-aid.aspx
   https://www.bls.gov/lau/lastrk19.htm
   Income by State: https://www.bea.gov/data/income-saving/personal-income-by-state
   College Tuition: https://www.kaggle.com/jessemostipak/college-tuition-diversity-and-pay?select=tuition_cost.csv
   Unemployment: https://www.bls.gov/emp/tables/unemployment-earnings-education.htm
       https://www.google.com/search?q=unemployment+2019&rlz=1C1CHBD_enUS805US805&oq=unemployment+2019&aqs=chrome..69i57j0l7.4478j0j7&sourceid=chrome&ie=UTF-8
   
